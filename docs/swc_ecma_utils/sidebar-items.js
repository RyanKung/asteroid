initSidebarItems({"enum":[["Purity",""],["Type","Type of value."],["Value","Runtime value."]],"fn":[["alias_ident_for","Used to determine super_class_ident"],["alias_if_required","Returns `(ident, aliased)`"],["calc_literal_cost",""],["contains_ident_ref",""],["contains_this_expr",""],["default_constructor",""],["drop_span",""],["extract_var_ids","Extracts hoisted variables"],["find_ids",""],["has_rest_pat",""],["is_literal",""],["is_rest_arguments","Check if `e` is `...arguments`"],["is_valid_ident",""],["prepend","inject `branch` after directives"],["prepend_stmts","inject `stmts` after directives"],["preserve_effects","make a new expression which evaluates `val` preserving side effects, if any."],["prop_name_eq",""],["prop_name_to_expr",""],["prop_name_to_expr_value","Simillar to `prop_name_to_expr`, but used for value position."],["to_int32","Cast to javascript's int32"],["undefined",""]],"macro":[["member_expr","Creates a member expression."],["private_ident","Shortcut for `quote_ident!(span.apply_mark(Mark::fresh(Mark::root())), s)`"],["quote_expr",""],["quote_ident",""],["quote_str",""]],"mod":[["constructor",""],["ident",""],["load",""],["options",""],["resolve",""],["var",""]],"static":[["COMMENTS",""],["HANDLER",""]],"struct":[["DestructuringFinder","Finds all idents of variable"],["DropSpan",""],["Hoister",""],["IdentFinder",""],["LiteralVisitor",""],["RestPatVisitor",""],["ThisVisitor",""],["UsageFinder","Finds usage of `ident`"]],"trait":[["ExprExt","Extension methods for [Expr]."],["ExprFactory","Extension methods for [Expr]."],["IdentExt",""],["IsDirective",""],["IsEmpty",""],["ModuleItemLike",""],["StmtExt",""],["StmtLike",""]],"type":[["BoolValue",""]]});